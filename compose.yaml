services:

  backend:
    image: barbarasousilva/healthmed-backend:latest
    container_name: healthmed-backend
    environment:
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${BACKEND_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-net

  frontend:
    image: barbarasousilva/healthmed-frontend:latest
    container_name: healthmed-frontend
    ports:
      - "${FRONTEND_PORT}:8080"
    environment:
      VITE_API_URL: ${VITE_API_URL}
    depends_on:
      - backend
    networks:
      - app-net

  db:
    image: postgres:15
    container_name: healthmed-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

networks:
  app-net:

volumes:
  postgres_data: